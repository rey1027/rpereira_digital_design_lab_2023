module testbench_alu;

  parameter N = 6;
  
  logic [N-1:0] a_tb;
  logic [N-1:0] b_tb;
  logic [N-1:0] output_tb;
  
  and_gate_n #(.N(N)) dut (
    .a(a_tb),
    .b(b_tb),
    .output_1(output_tb)
  );
  
  initial begin
    $monitor("a = %b, b = %b, output = %b", a_tb, b_tb, output_tb);
    
    // Test case 1: All bits of a and b are 1
    a_tb = 6'b111111;
    b_tb = 6'b111111;
    #1;
    if (output_tb !== 6'b111111) $error("Test case 1 failed!");
    
    // Test case 2: All bits of a are 0 and all bits of b are 1
    a_tb = 6'b000000;
    b_tb = 6'b111111;
    #1;
    if (output_tb !== 6'b000000) $error("Test case 2 failed!");
    
    // Test case 3: All bits of a are 1 and all bits of b are 0
    a_tb = 6'b111111;
    b_tb = 6'b000000;
    #1;
    if (output_tb !== 6'b000000) $error("Test case 3 failed!");
    
    // Test case 4: All bits of a and b are 0
    a_tb = 6'b000000;
    b_tb = 6'b000000;
    #1;
    if (output_tb !== 6'b000000) $error("Test case 4 failed!");
    
    $display("All test cases passed!");
    $finish;
  end
  
endmodule
